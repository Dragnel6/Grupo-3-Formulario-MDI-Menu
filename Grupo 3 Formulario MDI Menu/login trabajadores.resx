<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>